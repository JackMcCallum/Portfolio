// === Inputs
## IN inPosition	POSITION

// === Uniform
## UNIFORM sampler2D textureMap TEXTURE_UNIT0
## UNIFORM vec4 paramData MANUAL0
## UNIFORM vec4 originData MANUAL1

## VERTEX
// ========== VERTEX SHADER ========== 
#version 330

in vec3 inPosition;
out vec2 varTexCoord;

void main()
{
	gl_Position = vec4(inPosition, 1);
	varTexCoord = inPosition.xy*0.5+0.5;
}

## FRAGMENT
// ========== FRAGMENT SHADER ========== 
#version 330

in vec2 varTexCoord;
out vec4 outColor;
uniform sampler2D textureMap;

// ResX/ResY/intensity/empty
uniform vec4 paramData;
// origin data, where the blur should be on screen
// x/y/z/empty
uniform vec4 originData;

const float sampMult[15] = float[]
(
	0.0192,
	0.0376,
	0.0547,
	0.0696,
	0.0818,
	0.0909,
	0.0965,
	0.0984,
	0.0965,
	0.0909,
	0.0818,
	0.0696,
	0.0547,
	0.0376,
	0.0192
);
	
const int numSamples = 15;

void main()
{
	vec2 opos = vec2(originData.x, originData.y);
	
	vec4 color = vec4(0,0,0,0);
	for (int i=0; i<numSamples; i++)
	{
		vec2 newUV = (varTexCoord-opos)*(1+i*paramData.z)+opos;
		color += texture(textureMap, newUV);
	}
	outColor = color/numSamples;
}



